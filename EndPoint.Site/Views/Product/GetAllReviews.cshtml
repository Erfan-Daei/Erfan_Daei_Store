@using Practice_Store.Application.Services.Products.Queries.GetAllReviews
@model List<GetAllReviewsDto>
@{
    ViewData["Title"] = "GetAllReviews";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var isAuthenticated = User.Identity.IsAuthenticated;
}

<section class ="product-details space-top space-extra-bottom">
    <div class="container">
        <div class="tab-pane fade show active" id="reviews" role="tabpanel" aria-labelledby="reviews-tab">
            <div class="woocommerce-Reviews">
                <div class="th-comments-wrap ">
                    <ul class="comment-list">
                        @foreach (var Reviewer in Model)
                        {
                            <li class="review th-comment-item">
                                <div class="th-post-comment">
                                    <div class="comment-avater"><img src="~/images/4213460-account-avatar-head-person-profile-user_115386.png" alt="Comment Author"></div>
                                    <div class="comment-content">
                                        <h4 class="name">@Reviewer.UserName @Reviewer.UserLastName</h4>
                                        <span class="commented-on"><i class="far fa-calendar"></i>@Reviewer.ReviewTime</span><div class="star-rating" role="img" aria-label="Rated 5.00 out of 5">
                                            <span>
                                                @for (int i = 0; i < Reviewer.UserScore; i++)
                                                {
                                                    <a class="star active" href="#">30</a>
                                                }
                                            </span>
                                        </div>
                                        <p class="text">@Reviewer.ReviewDetail</p>
                                        @if (Reviewer.Reply != null)
                                        {
                                            <br />
                                            <p class="text">پاسخ @Reviewer.Reply.DisplayName :  @Reviewer.Reply.ReviewDetail</p>
                                            <p class="text">تاریخ :  @Reviewer.Reply.ReplyTime</p>
                                        }
                                    </div>
                                </div>
                            </li>
                        }
                    </ul>
                </div>
                <div class="th-comment-form ">
                    <div class="form-title"><h3 class="blog-inner-title ">یک بررسی اضافه کنید</h3></div>
                    <div class="row">
                        <div class="form-group rating-select d-flex align-items-center">
                            <label>امتیاز شما</label><p class="stars"><span><a class="star-1" href="#">1</a><a class="star-2" href="#">2</a><a class="star-3" href="#">3</a><a class="star-4" href="#">4</a><a class="star-5" href="#">5</a></span></p>
                        </div>
                        <div class="col-12 form-group">
                            <textarea id="ReviewText" placeholder="یک پیام بنویس" class="form-control"></textarea><i class="text-title far fa-pencil-alt"></i>
                        </div>
                        <div class="col-12 form-group mb-0"><button class="th-btn" onclick="AddReviewFunc()">ارسال بررسی</button></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts{
    <link href="~/sweetalert2/sweetalert2.min.css" rel="stylesheet" />
    <script src="~/sweetalert2/sweetalert2.min.js"></script>
    <script>
        function AddReviewFunc(){
            var authenticated = @isAuthenticated.ToString().ToLower();
                if (!authenticated) {
                    Swal.fire({
                        title: 'عدم احراز هویت',
                        text: "کاربر گرامی لطفا ابتدا به حساب کاربری خود وارد شوید",
                        icon: 'warning',
                        showCancelButton: false,
                        confirmButtonColor: '#d33',
                        cancelButtonColor: '#7cacbe',
                        confirmButtonText: 'ورود به حساب کاربری',
                    }).then((result) => {
                        if (result.isConfirmed) { window.location.href = '/register/login'; }
                    });
                }
                else {
                    var ReviewDetail = $("#ReviewText").val();
                    var Score = $('.stars a.active').text();
                    var postData = {
                        'ProductId': '@Model.FirstOrDefault().ProductId',
                        'ReviewDetail': ReviewDetail,
                        'Score': Score,
                    };
                $.ajax({
                contentType: 'application/x-www-form-urlencoded',
                dataType: 'json',
                type: "POST",
                url: "/Product/AddUserReview",
                data: postData,
                success: function (data) {
                if (data.isSuccess == true) {
                    swal.fire(
                        'موفق!',
                        data.message,
                        'success'
                    ).then(function (isConfirm) {
                             window.location.reload();
                    });
                }
                else {
                    swal.fire(
                        'هشدار!',
                        data.message,
                        'warning'
                    );
                }
            },
            error: function (request, status, error) {
                alert(request.responseText);
            }
            });
                }
        }
    </script>
}